import pygame 
import time
import random


pygame.init()

DISPLAY_WIDTH, DISPLAY_HEIGHT = 1280, 720
DISPLAY_MIDDLE = (DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2)
DISPLAY = pygame.display.set_mode((DISPLAY_WIDTH,DISPLAY_HEIGHT))
pygame.display.set_caption("Fighter Jet Game")
BACKGROUND = pygame.transform.scale(pygame.image.load("./fighter-jet-game/BG.jpg"), (DISPLAY_WIDTH,DISPLAY_HEIGHT))

FONT = pygame.font.SysFont("centaur", 32)

player_position = (0,0)
SPACESHIP_HEIGHT = 60
SPACESHIP_WIDTH = 50
SPACESHIP_VELOCITY = 5
ASTEROID_HEIGHT = 10
ASTEROID_WIDTH = 5
ASTEROID_VELOCITY = 3

class Sprite(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.transform.scale(pygame.image.load("./fighter-jet-game/fighter-jet-image.png").convert_alpha(), (74.4, 80))
        self.rect = pygame.Rect(200, DISPLAY_HEIGHT-SPACESHIP_HEIGHT, SPACESHIP_WIDTH, SPACESHIP_HEIGHT)


def main():

   
    ASTEROID_IMAGE = pygame.transform.scale(pygame.image.load("./fighter-jet-game/missile-image.png").convert_alpha(), (10, 40))
    ASTEROID_MASK = pygame.mask.from_surface(ASTEROID_IMAGE)
    spaceship = pygame.transform.scale(pygame.image.load("./fighter-jet-game/fighter-jet-image.png").convert_alpha(), (74.4, 80))
    SPACE_SHIP_MASK = pygame.mask.from_surface(spaceship)
    MASK_IMAGE = SPACE_SHIP_MASK.to_surface()
    bullet = pygame.Surface((10,10))
    bullet.fill("Red")
    bullet_mask = pygame.mask.from_surface(bullet)

    
    space_ship =  Sprite()

    CLOCK = pygame.time.Clock()
    start_time = time.time()
    elapsed_time = 0
    text_time = FONT.render(f"Time : {round(elapsed_time)}s", 1, "white")
    
    asteroid_increase = 1000
    asteroid_count = 0
    asteroids = []

    crashed = False
    running = True

    while running:
        pos = pygame.mouse.get_pos()
        elapsed_time = time.time() - start_time
        asteroid_count += CLOCK.tick(60)
        

        if SPACE_SHIP_MASK.overlap(bullet_mask, (pos[0] - space_ship.rect.x, pos[1] - space_ship.rect.y)):
            col = "red"
        else:
            col = "green"
        bullet.fill(col)


        if asteroid_count > asteroid_increase:
            for _ in range(3):
                asteroid_x = random.randint(0, DISPLAY_WIDTH - ASTEROID_WIDTH)
                ASTEROID = pygame.Rect(asteroid_x, -ASTEROID_HEIGHT, ASTEROID_WIDTH, ASTEROID_HEIGHT)
                asteroids.append(ASTEROID)
            asteroid_increase = max(200, asteroid_increase - 50)
            asteroid_count = 0

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
                break

        keys = pygame.key.get_pressed()

        if keys[pygame.K_w] and space_ship.rect.y - SPACESHIP_VELOCITY >= 0:
            space_ship.rect.y -= SPACESHIP_VELOCITY
        if keys[pygame.K_s] and space_ship.rect.y + SPACESHIP_VELOCITY + SPACESHIP_HEIGHT <= DISPLAY_HEIGHT:
            space_ship.rect.y += SPACESHIP_VELOCITY
        if keys[pygame.K_a] and space_ship.rect.x - SPACESHIP_VELOCITY >= 0:
            space_ship.rect.x -= SPACESHIP_VELOCITY
        if keys[pygame.K_d] and space_ship.rect.x + SPACESHIP_VELOCITY + SPACESHIP_WIDTH <= DISPLAY_WIDTH:
            space_ship.rect.x += SPACESHIP_VELOCITY

        for ASTEROID in asteroids[:]:
            ASTEROID.y += ASTEROID_VELOCITY
            if  ASTEROID.y > DISPLAY_HEIGHT:
                asteroids.remove(ASTEROID)
            elif ASTEROID.y + ASTEROID_HEIGHT >= space_ship.rect.y and ASTEROID.colliderect(space_ship):
                asteroids.remove(ASTEROID)
                crashed = True
                break



        if crashed:
            text_lost = FONT.render("You Lost the Game!", 1, "white")
            DISPLAY.blit(text_lost, (DISPLAY_WIDTH/2 - text_lost.get_width()/2, DISPLAY_HEIGHT/2 - text_lost.get_height()/2))
            pygame.display.update()
            pygame.time.delay(5000)
            break   
        # DISPLAY.blit()
        DISPLAY.blit(BACKGROUND, (0,0))
        DISPLAY.blit(text_time, (10,10))
        DISPLAY.blit(space_ship.image, space_ship.rect)
        DISPLAY.blit(bullet, pos)

        for ASTEROID in asteroids:
            DISPLAY.blit(ASTEROID_IMAGE, ASTEROID)
        

        pygame.display.update()
    
    pygame.quit()
    

if __name__ == "__main__":
    main()